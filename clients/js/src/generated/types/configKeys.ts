/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getArrayDecoder,
  getArrayEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getShortU16Decoder,
  getShortU16Encoder,
  getTupleDecoder,
  getTupleEncoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';

/**
 * A collection of keys to be stored in Config account data.
 * Each key tuple comprises a unique `Pubkey` identifier,
 * and `bool` whether that key is a signer of the data.
 */

export type ConfigKeys = Array<readonly [Address, boolean]>;

export type ConfigKeysArgs = ConfigKeys;

export function getConfigKeysEncoder(): Encoder<ConfigKeysArgs> {
  return getArrayEncoder(
    getTupleEncoder([getAddressEncoder(), getBooleanEncoder()]),
    { size: getShortU16Encoder() }
  );
}

export function getConfigKeysDecoder(): Decoder<ConfigKeys> {
  return getArrayDecoder(
    getTupleDecoder([getAddressDecoder(), getBooleanDecoder()]),
    { size: getShortU16Decoder() }
  );
}

export function getConfigKeysCodec(): Codec<ConfigKeysArgs, ConfigKeys> {
  return combineCodec(getConfigKeysEncoder(), getConfigKeysDecoder());
}
